package org.sagebionetworks.researchstack.backbone.result;

import java.io.File;

/**
 * Created by TheMDP on 2/6/17.
 *
 * The `FileResult` class is a result that references the location of a file produced
 * during a task.
 *
 * A file result is typically generated by the library as the task proceeds. When the task
 * completes, it may be appropriate to serialize the linked file for transmission
 * to the server.
 *
 * Active steps typically produce file results when Accelerometer or Gyroscope sensor data is
 * serialized to disk using a data logger (`DataLogger`). Audio recording also produces a file
 * result.
 *
 * When you write a custom step, use files to report results only when the data
 * is likely to be too big to hold in memory for the duration of the task. For
 * example, fitness tasks that use sensors can be quite long and can generate
 * a large number of samples. To compensate for the length of the task, you can stream the samples to disk during
 * the task, and return a `FileResult` object in the result hierarchy, usually as a
 * child of an `StepResult` object.
 */

public class FileResult extends Result {

    /**
     * The MIME content type of the result.
     *
     * For example, "application/json".
     */
    private String contentType;

    /**
     * The File location of the file produced.
     *
     * It is the responsibility of the receiver of the result object to delete
     * the file when it is no longer needed.
     *
     * The file is typically written to the output directory of the
     * ViewTaskActivity, so it is common to manage the archiving or cleanup
     * of these files by archiving or deleting the entire output directory.
     */
    private File file;

    /* Default identifier for serialization/deserialization */
    FileResult() {
        super();
    }

    public FileResult(String identifier) {
        super(identifier);
    }

    /**
     * @param identifier identifier for this FileResult
     * @param file the location of the file
     * @param contentType the mime content type of the file
     */
    public FileResult(String identifier, File file, String contentType) {
        super(identifier);
        setFile(file);
        setContentType(contentType);
    }

    public String getContentType() {
        return contentType;
    }

    public void setContentType(String contentType) {
        this.contentType = contentType;
    }

    public File getFile() {
        return file;
    }

    public void setFile(File file) {
        this.file = file;
    }
}
